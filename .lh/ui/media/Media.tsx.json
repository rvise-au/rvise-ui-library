{
    "sourceFile": "ui/media/Media.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1704769565336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704769769341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,70 @@\n 'use client';\n-import { useState } from 'react';\n+import Image from 'next/image';\n+import { useEffect, useState } from 'react';\n+import { TbPlayerPlay } from 'react-icons/tb';\n+import ReactPlayer from 'react-player/lazy';\n \n-export const Media = ({ className, imageProps, videoProps, type }) => {\n-  const { autoplay, loop, muted, videoUrl, thumbnail, youtubeSrc, sourceType } = videoProps;\n-  const [playing, setPlaying] = useState(autoplay || false);\n-  const [mounted, setMounted] = useState(false);\n-  const youtubeSource = youtubeId && `https://www.youtube.com/watch?v=${youtubeId}`;\n+import { ActionIcon } from '@mantine/core';\n \n-  const videoSource =\n-    sourceType === 'youtube' ? `https://www.youtube.com/watch?v=${youtubeSrc}` : videoUrl;\n+import styles from './styles/Media.module.css';\n+\n+export const Media = ({ className, imageProps, videoProps, imageProps, type }) => {\n+    const { autoplay, loop, muted, videoUrl, thumbnail, youtubeSrc, sourceType } = videoProps;\n+      const [playing, setPlaying] = useState(autoplay || false);\n+      const [mounted, setMounted] = useState(false);\n+      const youtubeSource = youtubeId && `https://www.youtube.com/watch?v=${youtubeId}`;\n+\n+      const videoSource =\n+        sourceType === 'youtube' ? `https://www.youtube.com/watch?v=${youtubeSrc}` : videoUrl;\n+          useEffect(() => {\n+            setMounted(true);\n+          }, []);\n+            useEffect(() => {\n+              if (mounted && autoplay) setPlaying(true);\n+            }, [mounted]);\n+\n+        return (\n+          <div>\n+            {type === 'image' && <Image {...imageProps} />}\n+            {variant === 'video' && mounted && (\n+              <ReactPlayer\n+                light={\n+                  !autoplay && thumbnail?.url ? (\n+                    <ImageBox\n+                      {...thumbnail}\n+                      alt={thumbnail?.altText || 'Video thumbnail'}\n+                      classesWrapper={classes.image}\n+                      quality={85}\n+                      radius={radius}\n+                    />\n+                  ) : (\n+                    !autoplay\n+                  )\n+                }\n+                loop\n+                playing={playing}\n+                onPause={() => setPlaying(false)}\n+                playIcon={\n+                  <ActionIcon\n+                    variant=\"filled\"\n+                    color=\"white\"\n+                    radius=\"xl\"\n+                    name=\"Click here to play this video\"\n+                    onClick={() => setPlaying(!playing)}\n+                    className={styles.playerButton}\n+                  >\n+                    <TbPlayerPlay size={16} />\n+                  </ActionIcon>\n+                }\n+                width=\"100%\"\n+                muted={autoplay}\n+                controls={false}\n+                height=\"100%\"\n+                url={video}\n+                className={classes.video}\n+                {...playerProps}\n+              />\n+            )}\n+          </div>\n+        );\n };\n"
                },
                {
                    "date": 1704769791147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     if (mounted && autoplay) setPlaying(true);\n   }, [mounted]);\n \n   return (\n-    <div>\n+    <div className={styles.root}>\n       {type === 'image' && <Image {...imageProps} />}\n       {variant === 'video' && mounted && (\n         <ReactPlayer\n           light={\n"
                }
            ],
            "date": 1704769565336,
            "name": "Commit-0",
            "content": "'use client';\nimport { useState } from 'react';\n\nexport const Media = ({ className, imageProps, videoProps, type }) => {\n    const { autoplay, loop, muted, videoUrl, thumbnail, youtubeSrc, sourceType } = videoProps;\n      const [playing, setPlaying] = useState(autoplay || false);\n      const [mounted, setMounted] = useState(false);\n      const youtubeSource = youtubeId && `https://www.youtube.com/watch?v=${youtubeId}`;\n\n      const videoSource =\n        sourceType === 'youtube' ? `https://www.youtube.com/watch?v=${youtubeSrc}` : videoUrl;\n};\n"
        }
    ]
}